#import "template.typ": *
#import "@preview/cades:0.3.0": qr-code

// Take a look at the file `template.typ` in the file panel
// to customize this template and discover how it works.
#show: project.with(
  title: "Jogo de Cartas",
  authors: (
    "Laborat√≥rio de Algoritmia 1",
    "Laborat√≥rios de Inform√°tica 2",
  ),
  date : "Ano Letivo 2023/24",
)

#set page(numbering : "1")

= Introdu√ß√£o
O objetivo deste projeto √© implementar um jogo de cartas relativamente simples em C no sistema operativo Linux.

== Baralho
O baralho cont√©m as seguintes 56 cartas:

üÇ° üÇ¢ üÇ£ üÇ§ üÇ• üÇ¶ üÇß üÇ® üÇ© üÇ™ üÇ´ üÇ¨ üÇ≠ üÇÆ

üÇ± üÇ≤ üÇ≥ üÇ¥ üÇµ üÇ∂ üÇ∑ üÇ∏ üÇπ üÇ∫ üÇª üÇº üÇΩ üÇæ

üÉÅ üÉÇ üÉÉ üÉÑ üÉÖ üÉÜ üÉá üÉà üÉâ üÉä üÉã üÉå üÉç üÉé

üÉë üÉí üÉì üÉî üÉï üÉñ üÉó üÉò üÉô üÉö üÉõ üÉú üÉù üÉû

A ordem dos valores e dos naipes √© dada acima. Assim:

- A ordem dos naipes √©: ‚ô† ‚ô• ‚ô¶ ‚ô£
- A ordem *ascendente* dos valores √©: A 2 3 4 5 6 7 8 9 10 J C Q K

== Objetivo
O objetivo do jogo √© livrarmo-nos de todas as cartas.
Cada jogador recebe 14 cartas. Na sua vez, o jogador pode jogar uma combina√ß√£o de cartas permitida ou passar a vez. N√£o √© obrigat√≥rio jogar mesmo que o possa fazer.

Se for o primeiro a jogar, o jogador pode escolher qualquer combina√ß√£o v√°lida. Se jogarmos ap√≥s outro jogador, temos que jogar uma combina√ß√£o igual e com o mesmo n√∫mero de cartas. A resposta tem de ser uma combina√ß√£o cuja carta mais alta seja superior √† carta mais alta da combina√ß√£o jogada ou passar. H√° algumas excep√ß√µes a esta regra quando a √∫ltima combina√ß√£o jogada s√≥ cont√©m reis. Caso todos os outros jogadores passarem, a ronda acabou e somos n√≥s a come√ßar a jogar novamente e por isso podemos jogar qualquer combina√ß√£o.

Quando somos os primeiros a livramo-nos de todas as cartas, ganhamos pontos por cada carta que ficou nas m√£os dos nossos advers√°rios.

== Combina√ß√µes v√°lidas

Existem v√°rias combina√ß√µes poss√≠veis:

/ Conjunto: de uma at√© quatro cartas todas com o *mesmo valor* mas de naipes diferentes;
/ Sequ√™ncia: de tr√™s ou mais cartas de *valores* consecutivos (n√£o necessariamente todas do mesmo naipe);
/ Dupla sequ√™ncia: de tr√™s ou mais pares de valores consecutivos.

O tamanho de uma dupla sequ√™ncia √© o n√∫mero de valores diferentes e consecutivos. Assim, uma dupla sequ√™ncia de tamanho tr√™s cont√©m tr√™s pares consecutivos de quaisquer naipes. Por exemplo üÉãüÇ´üÇºüÇ¨üÉùüÇ≠ √© uma dupla sequ√™ncia de tamanho tr√™s cuja carta mais alta √© a Dama de Paus.


Cabe ao jogador escolher a combina√ß√£o que quer jogar.
Uma combina√ß√£o s√≥ pode ser seguida de uma combina√ß√£o do mesmo tipo e com o mesmo n√∫mero de cartas. Para comparar duas combina√ß√µes, comparamos a carta mais alta de cada combina√ß√£o. Uma carta √© mais alta se tiver o valor mais alto ou, sendo os valores iguais, se tiver um naipe mais valioso.

Existem algumas excep√ß√µes √† regra de que uma combina√ß√£o tenha que ser seguida de outra com o mesmo tipo e n√∫mero de cartas:

- Um rei (K) pode ser seguido de um conjunto de quatro cartas iguais;
- Um rei (K) pode ser seguido por uma dupla sequ√™ncia  de tamanho tr√™s;
- Um par de reis pode ser seguido por uma dupla sequ√™ncia de tamanho quatro;
- Um trio de reis pode ser seguido por uma dupla sequ√™ncia de tamanho cinco.

A seguir a uma destas combina√ß√µes tem que se seguir outra do mesmo tipo mas mais valiosa.

== Exemplo de um jogo

#figure(align(center, table(
  columns: 4,
  align: (col, row) => (center, center, center, center).at(col),
  fill : (col, row) => luma(if row == 0 {50} + 160 + if calc.even(row) {40} else {0} + if calc.even(col){40} else {0}),
  inset: 10pt,
  stroke : none,
  [*Jogador 1*], [*Jogador 2*], [*Jogador 3*],[*Jogador 4*],
  [6 ‚ô†], [6 ‚ô£], [8 ‚ô¶], [10 ‚ô¶],
  [C ‚ô•],[K ‚ô•],[3 ‚ô† 3 ‚ô• 3 ‚ô¶ 3 ‚ô£],[7 ‚ô† 7 ‚ô• 7 ‚ô¶ 7 ‚ô£],
  [PASSO],[PASSO],[PASSO],[4 ‚ô• 4 ‚ô¶ 5 ‚ô† 5 ‚ô• 6 ‚ô• 6 ‚ô¶],
  [PASSO],[PASSO],[PASSO], [10 ‚ô† J ‚ô• C ‚ô¶]
)), caption : "Exemplo de um jogo")

O primeiro jogador jogou o 6 ‚ô†. Seguiram-se v√°rias cartas isoladas at√© que o segundo jogador jogou o K ‚ô•. O terceiro jogador jogou a combina√ß√£o de excep√ß√£o do conjunto de quatro cartas iguais. A jogador a seguir jogou quatro setes. Todos os outros jogadores escolheram passar (ou porque n√£o podiam jogar ou porque n√£o o quiseram fazer).

O quarto jogador decidiu jogar uma dupla sequ√™ncia de tr√™s cartas e novamente todos os outros passaram. Finalmente, ele jogou as suas √∫ltimas tr√™s cartas numa sequ√™ncia de tr√™s cartas.

= Gui√µes

+ Dado um conjunto de cartas, imprimir qual √© o tipo de combina√ß√£o que este conjunto de cartas representa e qual √© a carta mais alta dessa combina√ß√£o;
+ Dadas v√°rias combina√ß√µes, dizer se s√£o compat√≠veis e orden√°-las;
+ Dada a informa√ß√£o apresentada ao jogador para o torneio e a jogada do jogador, imprimir a nova m√£o desse jogador. Dever√° imprimir-se a mesma m√£o caso a jogada seja inv√°lida;
+ Dada a √∫ltima combina√ß√£o jogada e as cartas da m√£o, apresentar todas as combina√ß√µes poss√≠veis que se pode jogar nessa posi√ß√£o ou escrever PASSO.

= Torneio

== Elegibilidade
S√£o eleg√≠veis para o torneio os grupos que:

- Tenham conclu√≠do com sucesso todos os gui√µes;
- Entreguem o jogador no concurso correto do servidor;
- Tenham *Accepted* a todos os testes,

== Rondas
- Inicialmente, os jogadores s√£o sorteados em grupos de quatro jogadores;
- Na ronda inicial existem dois jogadores aleat√≥rios em cada grupo;
- Cada grupo joga 16 vezes come√ßando cada jogador √† vez;
- Os dois jogadores com maior pontua√ß√£o passam √† ronda seguinte;
- Se um grupo n√£o tiver vencedores, os jogadores ser√£o todos eliminados;
- As rondas sucedem-se at√© que exista um s√≥ jogo a decorrer.


== Jogo
- Um jogo decorre com quatro jogadores, recebendo cada um o mesmo n√∫mero de cartas;
- H√° v√°rias rodadas at√© que um dos jogadores fique sem cartas;
- Cada jogador tem a hip√≥tese de jogar uma combina√ß√£o v√°lida ou passar;
- Se um jogador sugerir uma combina√ß√£o inv√°lida, isso equivale a passar;
- O jogo acaba quando um jogador ficar sem cartas ou se todos os jogadores passarem;
- Quando um jogador ficar sem cartas, ele recebe tantos pontos como o n√∫mero de cartas que ficou na m√£o dos outros jogadores;
- Um jogo √© ignorado caso terminar sem ningu√©m ficar sem cartas.

== Implementa√ß√£o
Para participar no torneio, √© necess√°rio escrever um programa que leia do _standard input_:

- Uma linha com as suas cartas;
- As combina√ß√µes jogadas at√© agora por cada jogador, ou a palavra PASSO se esse jogador passou (uma por cada linha)

E que imprima qual √© a combina√ß√£o que joga ou a palavra PASSO.

=== Exemplo de input
Usando o exemplo do jogo acima, o seu programa poderia receber o seguinte input:

`
10 ‚ô† J ‚ô• C ‚ô¶
6 ‚ô†
6 ‚ô£
8 ‚ô¶
10 ‚ô¶
C ‚ô•
K ‚ô•
3 ‚ô† 3 ‚ô• 3 ‚ô¶ 3 ‚ô£
7 ‚ô† 7 ‚ô• 7 ‚ô¶ 7 ‚ô£
PASSO
PASSO
PASSO
4 ‚ô• 4 ‚ô¶ 5 ‚ô† 5 ‚ô• 6 ‚ô• 6 ‚ô¶
PASSO
PASSO
PASSO
`
=== Exemplo de output
Nesta situa√ß√£o, o seu programa poderia imprimir uma das seguintes linhas:

+ `PASSO`
+ `10 ‚ô†`
+ `J ‚ô•`
+ `C ‚ô¶`
+ `10 ‚ô† J ‚ô• C ‚ô¶`

Mas, como √© √≥bvio, neste caso s√≥ a √∫ltima destas combina√ß√µes assegura a vit√≥ria.

= Avalia√ß√£o

Eis a informa√ß√£o pertinente sobre a avalia√ß√£o do projeto:

#figure(
align(center, table(
  columns: 3,
  align: (col, row) => (center, center, center, center).at(col),
  fill : (col, row) => luma(if row == 0 {200} else {240}),
  inset: 10pt,
  stroke : 0.1pt,
  [*Etapa*], [*Data de Entrega*], [*Pontua√ß√£o*],
  [Gui√£o 1], [8 de Abril], [2],
  [Gui√£o 2], [15 de Abril], [2],
  [Gui√£o 3], [22 de Abril], [2],
  [Gui√£o 4], [29 de Abril], [2],
  [Entrega Final], [18 de Maio], [2],
  [Entrega para Torneio], [18 de Maio], [2]
)), caption: "Avalia√ß√£o do projeto")

== Grupos
- Os grupos s√£o de quatro elementos;
- Existe *avalia√ß√£o de pares* em que cada elemento do grupo avalia os restantes elementos;
- A avalia√ß√£o de pares √© *p√∫blica*;
- A avalia√ß√£o determina a percentagem da componente de grupo para cada um dos elementos.

== Avalia√ß√£o dos Gui√µes
- Implica a submiss√£o para o MOOshak;
- Sujeita a defesa durante as aulas.

== Defesa
- A defesa ser√° entre 27 e 29 de Maio;
- Ser√£o feitas perguntas sobre o c√≥digo.

== Anula√ß√£o da componente de grupo
- Caso um aluno n√£o compare√ßa na defesa;
- Caso um aluno n√£o seja capaz de responder a qualquer pergunta sobre o c√≥digo;
- Se nenhum elemento do grupo conseguir explicar uma parte do c√≥digo.


== Pontua√ß√£o do torneio
A pontua√ß√£o √© distribu√≠da da seguinte maneira:

- *Vencedor*: 2 pontos
- *Final*: 1.5 pontos
- *Semi-final*: 1 ponto
- *Quartos de final*: 0.75 pontos
- *Oitavos de final*: 0.5 pontos

= Sugest√µes para escrever bom c√≥digo

#v(0.5cm)
#figure(align(center + bottom, qr-code("https://typst.app/project/rAerVzm_no4l09W8Gvj5To", width: 5cm)))